---
import BaseHead from '../components/BaseHead.astro';

const title = "Free Astro Markdown Editor | Rich Content to Markdown Converter";
const description = "Convert rich text content to Astro-compatible Markdown instantly. Professional WYSIWYG editor with tables, embeds, code blocks, and frontmatter support. Free online tool.";
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en">
<head>
    <BaseHead title={title} description={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="canonical" href={canonicalURL} />
    
    <!-- SEO Meta Tags -->
    <meta property="og:type" content="website">
    <meta property="og:title" content={title}>
    <meta property="og:description" content={description}>
    <meta property="og:url" content={canonicalURL}>
    <meta property="og:image" content="/astro-markdown-editor-preview.jpg">
    
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content={title}>
    <meta name="twitter:description" content={description}>
    <meta name="twitter:image" content="/astro-markdown-editor-preview.jpg">
    
    <!-- Keywords -->
    <meta name="keywords" content="astro markdown editor, markdown converter, rich text editor, WYSIWYG markdown, astro cms, markdown generator, frontmatter editor">
    
    <!-- Summernote CDN -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.20/summernote-lite.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.20/summernote-lite.min.js"></script>
    
    <!-- Turndown for HTML to Markdown -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/turndown/7.1.2/turndown.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/turndown/7.1.2/turndown-plugin-gfm.min.js"></script>
    
    <!-- Structured Data -->
    <script type="application/ld+json">
    {
        "@context": "https://schema.org",
        "@type": "WebApplication",
        "name": "Astro Markdown Editor",
        "description": "Free online tool to convert rich text content to Astro-compatible Markdown with frontmatter support",
        "url": "https://yoursite.com/astro-markdown-editor",
        "applicationCategory": "DeveloperApplication",
        "operatingSystem": "Web Browser",
        "offers": {
            "@type": "Offer",
            "price": "0",
            "priceCurrency": "USD"
        },
        "featureList": [
            "Rich text editing",
            "Markdown conversion", 
            "Table support",
            "Code syntax highlighting",
            "Embed support",
            "Frontmatter generation"
        ]
    }
    </script>

    <style>
        :root {
            --primary: #2337FF;
            --black: #000000;
            --white: #ffffff;
            --gray-50: #f9fafb;
            --gray-100: #f3f4f6;
            --gray-200: #e5e7eb;
            --gray-300: #d1d5db;
            --gray-400: #9ca3af;
            --gray-500: #6b7280;
            --gray-600: #4b5563;
            --gray-700: #374151;
            --gray-800: #1f2937;
            --gray-900: #111827;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            line-height: 1.6;
            color: var(--black);
            background: var(--white);
        }

        /* Hide default layout components */
        header, footer, nav {
            display: none !important;
        }

        /* Hero Section */
        .hero {
            background: linear-gradient(135deg, var(--primary) 0%, var(--black) 100%);
            color: var(--white);
            padding: 80px 0;
            text-align: center;
        }

        .hero-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .hero h1 {
            font-size: 3.5rem;
            font-weight: 700;
            margin-bottom: 20px;
            line-height: 1.2;
        }

        .hero p {
            font-size: 1.25rem;
            margin-bottom: 40px;
            opacity: 0.9;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }

        .cta-button {
            background: var(--white);
            color: var(--primary);
            padding: 15px 30px;
            border-radius: 8px;
            text-decoration: none;
            font-weight: 600;
            font-size: 1.1rem;
            display: inline-block;
            transition: all 0.3s ease;
        }

        .cta-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(35, 55, 255, 0.2);
        }

        /* Features Section */
        .features {
            padding: 80px 0;
            background: var(--gray-50);
        }

        .features-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .features h2 {
            text-align: center;
            font-size: 2.5rem;
            margin-bottom: 60px;
            color: var(--black);
        }

        .features-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 40px;
        }

        .feature-card {
            background: var(--white);
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-top: 4px solid var(--primary);
        }

        .feature-card h3 {
            color: var(--primary);
            margin-bottom: 15px;
            font-size: 1.3rem;
        }

        /* Editor Section */
        .editor-section {
            padding: 0;
            background: var(--white);
        }

        .editor-container {
            max-width: 1600px;
            margin: 0 auto;
        }

        .editor-header {
            background: var(--black);
            color: var(--white);
            text-align: center;
            padding: 40px 20px;
        }

        .editor-header h2 {
            font-size: 2.5rem;
            margin-bottom: 15px;
        }

        .editor-header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .main-editor {
            display: flex;
            min-height: 80vh;
            background: var(--white);
        }

        .editor-panel {
            flex: 1;
            display: flex;
            flex-direction: column;
            border-right: 1px solid var(--gray-200);
        }

        .editor-controls {
            background: var(--gray-50);
            padding: 20px;
            border-bottom: 1px solid var(--gray-200);
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            align-items: center;
            justify-content: center;
        }

        .control-btn {
            background: var(--white);
            border: 1px solid var(--gray-300);
            color: var(--black);
            padding: 8px 16px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.2s;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .control-btn:hover {
            background: var(--primary);
            color: var(--white);
            border-color: var(--primary);
        }

        .editor-content {
            flex: 1;
            padding: 20px;
        }

        #summernote {
            min-height: 500px;
        }

        .note-editor {
            border: 1px solid var(--gray-200) !important;
        }

        .note-toolbar {
            background: var(--gray-50) !important;
            border-bottom: 1px solid var(--gray-200) !important;
        }

        .note-btn {
            color: var(--black) !important;
        }

        .note-btn:hover {
            background: var(--primary) !important;
            color: var(--white) !important;
        }

        .output-panel {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: var(--black);
        }

        .output-header {
            background: var(--black);
            color: var(--white);
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .output-header h3 {
            font-size: 1.3rem;
        }

        .copy-btn {
            background: var(--primary);
            color: var(--white);
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.2s;
        }

        .copy-btn:hover {
            background: var(--white);
            color: var(--primary);
            transform: translateY(-1px);
        }

        .output-content {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
        }

        .markdown-output {
            background: var(--black);
            color: var(--white);
            font-family: 'Fira Code', 'Monaco', 'Consolas', monospace;
            font-size: 14px;
            line-height: 1.6;
            white-space: pre-wrap;
            word-wrap: break-word;
            min-height: 400px;
        }

        .stats-bar {
            background: var(--gray-50);
            padding: 15px 20px;
            border-top: 1px solid var(--gray-200);
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 14px;
            color: var(--gray-600);
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 10000;
        }

        .modal-content {
            background: var(--white);
            width: 90%;
            max-width: 600px;
            margin: 50px auto;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        }

        .modal h3 {
            color: var(--primary);
            margin-bottom: 20px;
            font-size: 1.5rem;
        }

        .modal input, .modal textarea, .modal select {
            width: 100%;
            padding: 12px;
            margin: 8px 0 16px 0;
            border: 1px solid var(--gray-300);
            border-radius: 6px;
            font-family: inherit;
        }

        .modal-buttons {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
            margin-top: 20px;
        }

        .modal-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.2s;
        }

        .modal-btn.cancel {
            background: var(--gray-100);
            color: var(--black);
        }

        .modal-btn.primary {
            background: var(--primary);
            color: var(--white);
        }

        /* FAQ Section */
        .faq {
            padding: 80px 0;
            background: var(--white);
        }

        .faq-container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .faq h2 {
            text-align: center;
            font-size: 2.5rem;
            margin-bottom: 60px;
            color: var(--black);
        }

        .faq-item {
            margin-bottom: 20px;
            border: 1px solid var(--gray-200);
            border-radius: 8px;
            overflow: hidden;
        }

        .faq-question {
            background: var(--gray-50);
            padding: 20px;
            cursor: pointer;
            font-weight: 600;
            color: var(--primary);
            transition: all 0.2s;
        }

        .faq-question:hover {
            background: var(--primary);
            color: var(--white);
        }

        .faq-answer {
            padding: 20px;
            background: var(--white);
            display: none;
        }

        .faq-answer.active {
            display: block;
        }

        /* Toast */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--primary);
            color: var(--white);
            padding: 15px 25px;
            border-radius: 8px;
            z-index: 20000;
            opacity: 0;
            transform: translateX(100%);
            transition: all 0.3s;
            font-weight: 600;
        }

        .toast.show {
            opacity: 1;
            transform: translateX(0);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .hero h1 {
                font-size: 2.5rem;
            }

            .main-editor {
                flex-direction: column;
                min-height: auto;
            }

            .editor-panel, .output-panel {
                min-height: 50vh;
            }

            .editor-controls {
                flex-direction: column;
                align-items: stretch;
            }

            .control-btn {
                justify-content: center;
            }
        }
    </style>
</head>

<body>
    <!-- Hero Section -->
    <section class="hero">
        <div class="hero-container">
            <h1>Free Astro Markdown Editor</h1>
            <p>Convert rich text content to Astro-compatible Markdown instantly. Professional WYSIWYG editor with tables, embeds, code blocks, and frontmatter support.</p>
            <a href="#editor" class="cta-button">Start Creating Content</a>
        </div>
    </section>

    <!-- Features Section -->
    <section class="features">
        <div class="features-container">
            <h2>Why Choose Our Astro Markdown Editor?</h2>
            <div class="features-grid">
                <div class="feature-card">
                    <h3>Astro Optimized</h3>
                    <p>Generates perfect Astro-compatible Markdown with proper frontmatter, code blocks, and component syntax.</p>
                </div>
                <div class="feature-card">
                    <h3>Advanced Tables</h3>
                    <p>Create and edit complex tables with full formatting support. Converts to GitHub Flavored Markdown tables.</p>
                </div>
                <div class="feature-card">
                    <h3>Media Embeds</h3>
                    <p>Embed YouTube videos, Twitter posts, CodePen demos, and custom iframes with automatic conversion.</p>
                </div>
                <div class="feature-card">
                    <h3>Code Highlighting</h3>
                    <p>Support for multiple programming languages with proper syntax highlighting and formatting.</p>
                </div>
                <div class="feature-card">
                    <h3>Real-time Preview</h3>
                    <p>See your Markdown output update in real-time as you type and format your content.</p>
                </div>
                <div class="feature-card">
                    <h3>Completely Free</h3>
                    <p>No registration, no limits, no watermarks. Use our tool as much as you want, forever.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Editor Section -->
    <section id="editor" class="editor-section">
        <div class="editor-container">
            <div class="editor-header">
                <h2>Rich Content to Markdown Converter</h2>
                <p>Create beautiful content with our WYSIWYG editor and get perfect Astro Markdown output</p>
            </div>

            <div class="main-editor">
                <div class="editor-panel">
                    <div class="editor-controls">
                        <button class="control-btn" onclick="insertTemplate('blog')">
                            <i class="fas fa-file-alt"></i> Blog Template
                        </button>
                        <button class="control-btn" onclick="insertTemplate('docs')">
                            <i class="fas fa-book"></i> Docs Template
                        </button>
                        <button class="control-btn" onclick="showFrontmatterModal()">
                            <i class="fas fa-cog"></i> Frontmatter
                        </button>
                        <button class="control-btn" onclick="showEmbedModal()">
                            <i class="fas fa-video"></i> Add Embed
                        </button>
                        <button class="control-btn" onclick="insertTable()">
                            <i class="fas fa-table"></i> Insert Table
                        </button>
                        <button class="control-btn" onclick="clearEditor()">
                            <i class="fas fa-trash"></i> Clear
                        </button>
                    </div>

                    <div class="editor-content">
                        <div id="summernote"></div>
                    </div>

                    <div class="stats-bar">
                        <span id="wordCount">Words: 0 | Characters: 0</span>
                        <span>Last updated: <span id="lastUpdated">Never</span></span>
                    </div>
                </div>

                <div class="output-panel">
                    <div class="output-header">
                        <h3>Astro Markdown Output</h3>
                        <button class="copy-btn" onclick="copyMarkdown()">
                            <i class="fas fa-copy"></i> Copy Markdown
                        </button>
                    </div>
                    <div class="output-content">
                        <div id="markdownOutput" class="markdown-output"></div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- FAQ Section -->
    <section class="faq">
        <div class="faq-container">
            <h2>Frequently Asked Questions</h2>
            
            <div class="faq-item">
                <div class="faq-question" onclick="toggleFaq(this)">
                    What is Astro Markdown and why do I need this editor?
                </div>
                <div class="faq-answer">
                    <p>Astro is a modern web framework that uses Markdown for content creation. Our editor helps you create rich content visually and converts it to proper Astro-compatible Markdown with frontmatter, making it easy to create blog posts, documentation, and other content for Astro sites.</p>
                </div>
            </div>

            <div class="faq-item">
                <div class="faq-question" onclick="toggleFaq(this)">
                    Is this tool really free to use?
                </div>
                <div class="faq-answer">
                    <p>Yes! Our Astro Markdown editor is completely free with no registration required, no usage limits, and no watermarks. You can use it as much as you want for personal or commercial projects.</p>
                </div>
            </div>

            <div class="faq-item">
                <div class="faq-question" onclick="toggleFaq(this)">
                    Can I create tables with this editor?
                </div>
                <div class="faq-answer">
                    <p>Absolutely! Our editor includes full table support with the ability to add/remove rows and columns, format cells, and automatically converts to GitHub Flavored Markdown table syntax that works perfectly with Astro.</p>
                </div>
            </div>

            <div class="faq-item">
                <div class="faq-question" onclick="toggleFaq(this)">
                    What types of embeds are supported?
                </div>
                <div class="faq-answer">
                    <p>We support YouTube videos, Twitter posts, CodePen demos, GitHub Gists, Vimeo videos, and custom iframes. All embeds are converted to proper HTML that works seamlessly in Astro components.</p>
                </div>
            </div>

            <div class="faq-item">
                <div class="faq-question" onclick="toggleFaq(this)">
                    How do I add frontmatter to my content?
                </div>
                <div class="faq-answer">
                    <p>Click the "Frontmatter" button in the editor controls. You can add title, description, author, tags, publication date, and draft status. The frontmatter will be automatically added to your Markdown output in the correct YAML format.</p>
                </div>
            </div>

            <div class="faq-item">
                <div class="faq-question" onclick="toggleFaq(this)">
                    Does this work with other static site generators?
                </div>
                <div class="faq-answer">
                    <p>While optimized for Astro, the Markdown output is compatible with most static site generators including Next.js, Gatsby, Hugo, Jekyll, and others that support GitHub Flavored Markdown.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Modals -->
    <div id="frontmatterModal" class="modal">
        <div class="modal-content">
            <h3>Document Frontmatter</h3>
            <label>Title:</label>
            <input type="text" id="fmTitle" placeholder="Your post title">
            <label>Description:</label>
            <textarea id="fmDescription" placeholder="Brief description of your content"></textarea>
            <label>Author:</label>
            <input type="text" id="fmAuthor" placeholder="Your name">
            <label>Tags (comma-separated):</label>
            <input type="text" id="fmTags" placeholder="astro, markdown, blog">
            <label>Publication Date:</label>
            <input type="date" id="fmDate">
            <label>Status:</label>
            <select id="fmDraft">
                <option value="false">Published</option>
                <option value="true">Draft</option>
            </select>
            <div class="modal-buttons">
                <button class="modal-btn cancel" onclick="closeModal('frontmatterModal')">Cancel</button>
                <button class="modal-btn primary" onclick="insertFrontmatter()">Apply</button>
            </div>
        </div>
    </div>

    <div id="embedModal" class="modal">
        <div class="modal-content">
            <h3>Insert Media Embed</h3>
            <label>Embed Type:</label>
            <select id="embedType">
                <option value="youtube">YouTube Video</option>
                <option value="twitter">Twitter Post</option>
                <option value="codepen">CodePen</option>
                <option value="vimeo">Vimeo</option>
                <option value="github">GitHub Gist</option>
                <option value="iframe">Custom Iframe</option>
            </select>
            <label>URL:</label>
            <input type="text" id="embedURL" placeholder="Paste your URL here">
            <div class="modal-buttons">
                <button class="modal-btn cancel" onclick="closeModal('embedModal')">Cancel</button>
                <button class="modal-btn primary" onclick="insertEmbed()">Insert</button>
            </div>
        </div>
    </div>

    <div id="toast" class="toast"></div>

    <script is:inline>
        let frontmatter = '';
        
        document.addEventListener('DOMContentLoaded', function() {
            if (typeof $ === 'undefined' || typeof $.fn.summernote === 'undefined') {
                console.error('Summernote dependencies not loaded');
                return;
            }

            // Initialize Summernote
            $('#summernote').summernote({
                height: 500,
                minHeight: 400,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'italic', 'underline', 'clear']],
                    ['fontname', ['fontname']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['insert', ['link', 'picture', 'video']],
                    ['view', ['fullscreen', 'codeview', 'help']]
                ],
                placeholder: 'Start writing your content here...\n\nUse the toolbar above for formatting, tables, links, and more!',
                callbacks: {
                    onChange: function(contents) {
                        updateMarkdown();
                        updateWordCount();
                        updateLastModified();
                    }
                }
            });

            // Insert initial content
            const initialContent = 
                '<h1>Welcome to the Astro Markdown Editor</h1>' +
                '<p>This is a <strong>professional rich content editor</strong> that converts your content to <em>Astro-compatible Markdown</em> in real-time!</p>' +
                '<h2>Key Features</h2>' +
                '<ul>' +
                    '<li>Full-featured rich text editing</li>' +
                    '<li>Advanced table support</li>' +
                    '<li>Media embeds (YouTube, Twitter, etc.)</li>' +
                    '<li>Code syntax highlighting</li>' +
                    '<li>Frontmatter generation</li>' +
                    '<li>Real-time Markdown preview</li>' +
                '</ul>' +
                '<h3>Try it out!</h3>' +
                '<p>Start editing this content and watch the Markdown output update in real-time in the right panel.</p>' +
                '<blockquote>' +
                    '<p>"The best way to get started is to quit talking and begin doing." - Walt Disney</p>' +
                '</blockquote>';
            
            $('#summernote').summernote('code', initialContent);
            
            // Initial update
            updateMarkdown();
            updateWordCount();
            updateLastModified();
        });

        // Initialize Turndown converter
        function initTurndown() {
            if (typeof TurndownService === 'undefined') {
                console.error('Turndown not loaded');
                return null;
            }

            const turndownService = new TurndownService({
                headingStyle: 'atx',
                codeBlockStyle: 'fenced',
                bulletListMarker: '-'
            });

            // Add GFM plugin if available
            if (typeof TurndownPluginGfm !== 'undefined') {
                turndownService.use(TurndownPluginGfm.tables);
            }

            return turndownService;
        }

        function updateMarkdown() {
            const turndownService = initTurndown();
            if (!turndownService) return;

            const html = $('#summernote').summernote('code');
            let markdown = turndownService.turndown(html);
            
            // Clean up extra line breaks
            markdown = markdown.replace(/\n\n\n+/g, '\n\n');
            
            // Add frontmatter if exists
            const finalMarkdown = frontmatter ? frontmatter + '\n' + markdown : markdown;
            
            const outputElement = document.getElementById('markdownOutput');
            if (outputElement) {
                outputElement.textContent = finalMarkdown;
            }
        }

        function updateWordCount() {
            const html = $('#summernote').summernote('code');
            const text = html.replace(/<[^>]*>/g, '');
            const words = text.trim().split(/\s+/).filter(function(word) { return word.length > 0; }).length;
            const characters = text.length;
            
            const wordCountElement = document.getElementById('wordCount');
            if (wordCountElement) {
                wordCountElement.textContent = 'Words: ' + words + ' | Characters: ' + characters;
            }
        }

        function updateLastModified() {
            const now = new Date().toLocaleTimeString();
            const lastUpdatedElement = document.getElementById('lastUpdated');
            if (lastUpdatedElement) {
                lastUpdatedElement.textContent = now;
            }
        }

        function insertTemplate(type) {
            let content = '';
            
            if (type === 'blog') {
                content = 
                    '<h1>My Amazing Blog Post</h1>' +
                    '<p><em>Published on ' + new Date().toLocaleDateString() + '</em></p>' +
                    '<h2>Introduction</h2>' +
                    '<p>Write your compelling introduction here. Hook your readers with an interesting fact, question, or statement.</p>' +
                    '<h2>Main Content</h2>' +
                    '<p>This is where your main content goes. You can add:</p>' +
                    '<ul>' +
                        '<li>Lists and bullet points</li>' +
                        '<li>Code examples and snippets</li>' +
                        '<li>Images and media</li>' +
                        '<li>Tables and data</li>' +
                    '</ul>' +
                    '<h2>Conclusion</h2>' +
                    '<p>Wrap up your post with a strong conclusion that summarizes your key points.</p>';
            } else if (type === 'docs') {
                content = 
                    '<h1>Documentation Title</h1>' +
                    '<p>Brief description of what this documentation covers.</p>' +
                    '<h2>Table of Contents</h2>' +
                    '<ol>' +
                        '<li>Overview</li>' +
                        '<li>Getting Started</li>' +
                        '<li>API Reference</li>' +
                        '<li>Examples</li>' +
                    '</ol>' +
                    '<h2>Overview</h2>' +
                    '<p>Provide a high-level overview of the feature or API you are documenting.</p>' +
                    '<h2>Getting Started</h2>' +
                    '<p>Step-by-step instructions:</p>' +
                    '<ol>' +
                        '<li>Install the package</li>' +
                        '<li>Configure your project</li>' +
                        '<li>Run your first example</li>' +
                    '</ol>';
            }
            
            $('#summernote').summernote('code', content);
            updateMarkdown();
        }

        function insertTable() {
            const tableHTML = 
                '<table class="table table-bordered">' +
                    '<thead>' +
                        '<tr>' +
                            '<th>Header 1</th>' +
                            '<th>Header 2</th>' +
                            '<th>Header 3</th>' +
                        '</tr>' +
                    '</thead>' +
                    '<tbody>' +
                        '<tr>' +
                            '<td>Cell 1</td>' +
                            '<td>Cell 2</td>' +
                            '<td>Cell 3</td>' +
                        '</tr>' +
                        '<tr>' +
                            '<td>Cell 4</td>' +
                            '<td>Cell 5</td>' +
                            '<td>Cell 6</td>' +
                        '</tr>' +
                    '</tbody>' +
                '</table>';
            $('#summernote').summernote('pasteHTML', tableHTML);
            updateMarkdown();
        }

        function clearEditor() {
            if (confirm('Are you sure you want to clear all content?')) {
                $('#summernote').summernote('code', '');
                frontmatter = '';
                updateMarkdown();
                showToast('Editor cleared successfully!');
            }
        }

        function showModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.style.display = 'block';
            }
        }

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.style.display = 'none';
            }
        }

        function showFrontmatterModal() {
            showModal('frontmatterModal');
        }

        function insertFrontmatter() {
            const title = document.getElementById('fmTitle').value;
            const description = document.getElementById('fmDescription').value;
            const author = document.getElementById('fmAuthor').value;
            const tags = document.getElementById('fmTags').value;
            const date = document.getElementById('fmDate').value;
            const draft = document.getElementById('fmDraft').value;
            
            let fm = '---\n';
            if (title) fm += 'title: "' + title + '"\n';
            if (description) fm += 'description: "' + description + '"\n';
            if (author) fm += 'author: "' + author + '"\n';
            if (date) fm += 'pubDate: "' + date + '"\n';
            if (tags) {
                const tagArray = tags.split(',').map(function(tag) {
                    return '"' + tag.trim() + '"';
                }).join(', ');
                fm += 'tags: [' + tagArray + ']\n';
            }
            fm += 'draft: ' + draft + '\n';
            fm += '---';
            
            frontmatter = fm;
            updateMarkdown();
            closeModal('frontmatterModal');
            showToast('Frontmatter applied successfully!');
        }

        function showEmbedModal() {
            showModal('embedModal');
        }

        function insertEmbed() {
            const type = document.getElementById('embedType').value;
            const url = document.getElementById('embedURL').value;
            
            if (!url) return;
            
            let embedHTML = '';
            
            if (type === 'youtube') {
                const videoId = extractYouTubeId(url);
                if (videoId) {
                    embedHTML = '<iframe width="560" height="315" src="https://www.youtube.com/embed/' + videoId + '" frameborder="0" allowfullscreen></iframe>';
                }
            } else if (type === 'twitter') {
                embedHTML = '<!-- Twitter Embed: ' + url + ' -->\n<!-- Add Twitter embed script to your layout -->';
            } else if (type === 'codepen') {
                embedHTML = '<!-- CodePen Embed: ' + url + ' -->\n<!-- Add CodePen embed script to your layout -->';
            } else if (type === 'vimeo') {
                embedHTML = '<!-- Vimeo Embed: ' + url + ' -->';
            } else if (type === 'github') {
                embedHTML = '<!-- GitHub Gist: ' + url + ' -->';
            } else if (type === 'iframe') {
                embedHTML = '<iframe src="' + url + '" width="100%" height="400" frameborder="0"></iframe>';
            }
            
            if (embedHTML) {
                $('#summernote').summernote('pasteHTML', embedHTML);
                updateMarkdown();
                closeModal('embedModal');
                showToast('Embed added successfully!');
            }
        }

        function extractYouTubeId(url) {
            const regex = /(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/;
            const match = url.match(regex);
            return match ? match[1] : null;
        }

        function copyMarkdown() {
            const markdownOutput = document.getElementById('markdownOutput');
            if (!markdownOutput) return;
            
            const markdown = markdownOutput.textContent;
            
            if (navigator.clipboard) {
                navigator.clipboard.writeText(markdown).then(function() {
                    showToast('Markdown copied to clipboard!');
                }).catch(function() {
                    fallbackCopyTextToClipboard(markdown);
                });
            } else {
                fallbackCopyTextToClipboard(markdown);
            }
        }

        function fallbackCopyTextToClipboard(text) {
            const textarea = document.createElement('textarea');
            textarea.value = text;
            document.body.appendChild(textarea);
            textarea.focus();
            textarea.select();
            
            try {
                const successful = document.execCommand('copy');
                if (successful) {
                    showToast('Markdown copied to clipboard!');
                } else {
                    showToast('Failed to copy markdown');
                }
            } catch (err) {
                showToast('Failed to copy markdown');
            }
            
            document.body.removeChild(textarea);
        }

        function showToast(message) {
            const toast = document.getElementById('toast');
            if (toast) {
                toast.textContent = message;
                toast.classList.add('show');
                
                setTimeout(function() {
                    toast.classList.remove('show');
                }, 3000);
            }
        }

        function toggleFaq(element) {
            const answer = element.nextElementSibling;
            const isActive = answer.classList.contains('active');
            
            // Close all FAQ items
            const allAnswers = document.querySelectorAll('.faq-answer');
            allAnswers.forEach(function(item) {
                item.classList.remove('active');
            });
            
            // Toggle current item
            if (!isActive) {
                answer.classList.add('active');
            }
        }

        // Close modals when clicking outside
        window.onclick = function(event) {
            if (event.target.classList.contains('modal')) {
                event.target.style.display = 'none';
            }
        }

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey || e.metaKey) {
                if (e.key === 's') {
                    e.preventDefault();
                    copyMarkdown();
                }
            }
        });
    </script>
</body>
</html>
